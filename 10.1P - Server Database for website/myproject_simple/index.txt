const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const cors = require('cors');  // Import cors
const path = require('path');
const app = express();
const port = 4000;

app.use(cors());
app.use(express.json());
app.set('view engine', 'ejs'); 

//???
app.use(express.urlencoded({ extended: true }));

// app.use(express.static(path.join(__dirname, 'public')));


app.get('/', function(req, res) {
    res.render('index', { title: 'Home Page'});
});

// Route to serve the script.js file
// app.get('/script.js', (req, res) => {
//     res.sendFile(path.join(__dirname, 'views', 'script.js'));
// });


// Connect to SQLite database && create a new database if it doesn't exist
const db = new sqlite3.Database('./database.sqlite', (err) => {
    if (err) {
        console.error('Error opening database:', err.message);
    } else {
        db.run(`CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT, 
            firstname TEXT, 
            surename TEXT,
            mobile TEXT, 
            email TEXT, 
            capsOwned TEXT,
            capstyles TEXT,
            comments TEXT

        )`);
    }
}); 

// ----------------------------------------------------------------

app.post('/savedata', (req, res) => {
    postData(req, res);
    // res.send('User saved');
});

app.post('/submitmembership', function(req, res) {

    const { firstname, surename, mobileNumber, email, inputNumCaps, capstyles, comments  } = req.body;

    //-----------------------------------------

   
    
    //db 

    // if (!firstname || !surename || !mobileNumber || !email || !inputNumCaps || !capstyles || !comments) {
    //     return res.status(400).json({ message: 'Missing required fields' });
    // }

    const sql = 'INSERT INTO users (firstname, surename, mobile, email, capsOwned,capstyles, comments) VALUES (?, ?, ?, ?, ?, ?,?)'; 
    //  (firstname, surename, mobile,email, capsOwned,capstyles, comments) is the column name on the database

    db.run(sql, [firstname, surename, mobileNumber, email, inputNumCaps, capstyles, comments], function (err) {
        if (err) {
            return res.status(400).json({ error: err.message });
        } 

        const array = [firstname, surename, mobileNumber, email, inputNumCaps, capstyles, comments];
        let count = 0;
        
        console.log(firstname, surename, mobileNumber, email, inputNumCaps, capstyles, comments )
        
        array.forEach((element) => {
            if (element === "" || element === null) {
                count++;
            }
        });

        // if (!firstname || !surename || !mobileNumber || !email || !inputNumCaps || !capstyles  || !comments  ) {
        if (count > 0) {
            return res.render('alert', { title: 'Thank You', firstname, surename, mobileNumber, email, inputNumCaps, capstyles, comments, count});
        } else {
            return res.render('thankyou', { title: 'Thank You', firstname, surename, mobileNumber, email, inputNumCaps, capstyles, comments}); // Pass firstname
        }

    });
    
});

//--------------------------------------------------------------------------------------------------

app.get('/feedback', (req, res) => {
    getData(res);
    // res.send('Data fetched and logged to console');
});

// Function to fetch data from the 'users' table
const getData = (res) => {
    const sql = `SELECT * FROM users`; // Query for firstname and surname from 'users' table

    db.all(sql, [], (err, rows) => {
        if (err) {
            console.error(err.message);
            return res.status(500).send('An error occurred while fetching the data.');
        }

        res.render('submit', { title: 'Thank You', rows: rows });
    });
};

app.listen(4000);
console.log('Server is listening on port 4000');